# 1. Base image olarak OpenJDK kullanıyoruz
FROM openjdk:17-jdk-slim

# 2. Çalışma dizinini oluşturuyoruz
WORKDIR /app

ARG DATASOURCE_USERNAME
ARG DATASOURCE_PASSWORD
ARG SECURITY_USER_NAME
ARG SECURITY_USER_PASSWORD
ARG JWT_SECRET
ARG MAIL_USERNAME
ARG MAIL_PASSWORD
ARG POSTGRES_DB
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD

ENV SPRING_DATASOURCE_USERNAME=$DATASOURCE_USERNAME \
    SPRING_DATASOURCE_PASSWORD=$DATASOURCE_PASSWORD \
    SECURITY_USER_NAME=$SECURITY_USER_NAME \
    SECURITY_USER_PASSWORD=$SECURITY_USER_PASSWORD \
    JWT_SECRET=$JWT_SECRET \
    MAIL_USERNAME=$MAIL_USERNAME \
    MAIL_PASSWORD=$MAIL_PASSWORD \
    POSTGRES_DB=$POSTGRES_DB \
    POSTGRES_USER=$POSTGRES_USER \
    POSTGRES_PASSWORD=$POSTGRES_PASSWORD

# 3. Projenizin jar dosyasını container'a kopyalıyoruz
COPY target/RealtyHub-0.0.1-SNAPSHOT.jar /app/RealtyHub-0.0.1-SNAPSHOT.jar

# 4. Uygulamanın çalışmasını sağlayacak komut
CMD ["java", "-jar", "RealtyHub-0.0.1-SNAPSHOT.jar"]

# 5. Container'ın dışarıya açacağı portu belirliyoruz
EXPOSE 8082